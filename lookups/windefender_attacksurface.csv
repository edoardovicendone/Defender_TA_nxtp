rule_id,rule_name,rule_description
56a863a9-875e-4185-98a7-b882c64b5ce5,"Block abuse of exploited vulnerable signed drivers","This rule prevents an application from writing a vulnerable signed driver to disk. In-the-wild, vulnerable signed drivers can be exploited by local applications - that have sufficient privileges - to gain access to the kernel. Vulnerable signed drivers enable attackers to disable or circumvent security solutions, eventually leading to system compromise.The Block abuse of exploited vulnerable signed drivers rule does not block a driver already existing on the system from being loaded."
7674ba52-37eb-4a4f-a9a1-f0f9a1619a2c,"Process creation from Adobe Reader","This rule prevents attacks by blocking Adobe Reader from creating processes. Through social engineering or exploits, malware can download and launch payloads, and break out of Adobe Reader. By blocking child processes from being generated by Adobe Reader, malware attempting to use it as a vector are prevented from spreading."
d4f940ab-401b-4efc-aadc-ad5f3c50688a,"Office apps launching child processes","This rule blocks Office apps from creating child processes. Office apps include Word, Excel, PowerPoint, OneNote, and Access. Creating malicious child processes is a common malware strategy. Malware that abuse Office as a vector often run VBA macros and exploit code to download and attempt to run more payloads. However, some legitimate line-of-business applications might also generate child processes for benign purposes; such as spawning a command prompt or using PowerShell to configure registry settings."
9e6c4e1f-7d60-472f-ba1a-a39ef669e4b2,"Block credential stealing from the Windows local security authority subsystem","This rule helps prevent credential stealing by locking down Local Security Authority Subsystem Service (LSASS). LSASS authenticates users who sign in on a Windows computer. Microsoft Defender Credential Guard in Windows normally prevents attempts to extract credentials from LSASS. However, some organizations can't enable Credential Guard on all of their computers because of compatibility issues with custom smartcard drivers or other programs that load into the Local Security Authority (LSA). In these cases, attackers can use hack tools like Mimikatz to scrape cleartext passwords and NTLM hashes from LSASS."
be9ba2d9-53ea-4cdc-84e5-9b1eeee46550,"Block executable content from email client and webmail","This rule blocks the following file types from launching from email opened within the Microsoft Outlook application, or Outlook.com and other popular webmail providers: Executable files (such as .exe, .dll, or .scr) and Script files (such as a PowerShell .ps, Visual Basic .vbs, or JavaScript .js file)"
01443614-cd74-433a-b99e-2ecdc07bfc25,"Block executable files from running unless they meet a prevalence, age, or trusted list criteria","This rule blocks executable files, such as .exe, .dll, or .scr, from launching unless any of the following conditions are met: Prevalence: The executable files are found on more than 1,000 endpoints; Age: The executable files were released more than 24 hours ago; Location: The executable files are included in a trusted list or an exclusion list. Launching untrusted or unknown executable files can be risky, as it might not be initially clear if the files are malicious."
5beb7efe-fd9a-4556-801d-275e5ffc04cc,"Block execution of potentially obfuscated scripts","This rule detects suspicious properties within an obfuscated script. Script obfuscation is a common technique that both malware authors and legitimate applications use to hide intellectual property or decrease script loading times. Malware authors also use obfuscation to make malicious code harder to read, which prevents close scrutiny by humans and security software."
d3e037e1-3eb8-44c8-a917-57927947596d,"Block JavaScript or VBScript from launching downloaded executable content","This rule prevents scripts from launching potentially malicious downloaded content. Malware written in JavaScript or VBScript often acts as a downloader to fetch and launch other malware from the Internet. Although not common, line-of-business applications sometimes use scripts to download and launch installers."
3b576869-a4ec-4529-8536-b80a7769e899,"Block Office applications from creating executable content","This rule prevents Office apps, including Word, Excel, and PowerPoint, from creating potentially malicious executable content, by blocking malicious code from being written to disk. Malware that abuses Office as a vector might attempt to break out of Office and save malicious components to disk. These malicious components would survive a computer reboot and persist on the system. Therefore, this rule defends against a common persistence technique."
75668c1f-73b5-4cf0-bb93-3ecf5cb7cc84,"Block Office applications from injecting code into other processes","This rule blocks code injection attempts from Office apps into other processes. Attackers might attempt to use Office apps to migrate malicious code into other processes through code injection, so the code can masquerade as a clean process. There are no known legitimate business purposes for using code injection. This rule applies to Word, Excel, and PowerPoint."
26190899-1602-49e8-8b27-eb1d0a1ce869,"Block Office communication application from creating child processes","This rule prevents Outlook from creating child processes, while still allowing legitimate Outlook functions. This rule protects against social engineering attacks and prevents exploiting code from abusing vulnerabilities in Outlook. It also protects against Outlook rules and forms exploits that attackers can use when a user's credentials are compromised."
e6db77e5-3df2-4cf1-b95a-636979351e5b,"Block persistence through WMI event subscription","This rule prevents malware from abusing WMI to attain persistence on a device. Fileless threats employ various tactics to stay hidden, to avoid being seen in the file system, and to gain periodic execution control. Some threats can abuse the WMI repository and event model to stay hidden."
d1e49aac-8f56-4280-b9ba-993a6d77406c,"Block process creations originating from PSExec and WMI commands","This rule blocks processes created through PsExec and WMI from running. Both PsExec and WMI can remotely execute code, so there is a risk of malware abusing this functionality for command and control purposes, or to spread an infection throughout an organization's network."
b2b3f03d-6a65-4f7b-a9c7-1c7ef74a9ba4,"Block untrusted and unsigned processes that run from USB","With this rule, admins can prevent unsigned or untrusted executable files from running from USB removable drives, including SD cards. Blocked file types include executable files (such as .exe, .dll, or .scr)"
92e97fa1-2edf-4476-bdd6-9dd0b4dddc7b,"Block Win32 API calls from Office macros","This rule prevents VBA macros from calling Win32 APIs. Office VBA enables Win32 API calls. Malware can abuse this capability, such as calling Win32 APIs to launch malicious shellcode without writing anything directly to disk. Most organizations don't rely on the ability to call Win32 APIs in their day-to-day functioning, even if they use macros in other ways."
c1db55ab-c21a-4637-bb3f-a12568109d35,"Use advanced protection against ransomware","This rule provides an extra layer of protection against ransomware. It uses both client and cloud heuristics to determine whether a file resembles ransomware. This rule does not block files that have one or more of the following characteristics: The file has already been found to be unharmful in the Microsoft cloud; The file is a valid signed file; The file is prevalent enough to not be considered as ransomware."
